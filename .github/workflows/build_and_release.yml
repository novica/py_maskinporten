name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v5

      - name: Install the project
        run: uv sync --all-extras --dev --locked

      - name: Build package
        run: uv build

      - name: Get platform tag
        id: platform_tag
        shell: bash
        run: |
          PLATFORM_TAG=$(pip debug --verbose | awk -F ': ' '/Compatible tags:/{getline; print $1}' | head -1 | tr -d ' ')
          echo "PLATFORM_TAG=${PLATFORM_TAG}" >> $GITHUB_ENV

      - name: Get package version
        id: package_version
        shell: bash
        run: |
          VERSION=$(awk -F ' = ' '/version/ {gsub(/"/, "", $2); print $2}' pyproject.toml)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Rename wheel
        run: |
          mv dist/*.whl dist/py_maskinporten-${{ env.VERSION }}-py3-none-${{ env.PLATFORM_TAG }}.whl || ls -l dist/

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}
          path: dist/*.whl

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: "wheel-*"
          merge-multiple: true
          path: ./dist

      - name: List downloaded wheels (debugging)
        run: ls -l ./dist

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            This release contains the built wheels for all operating systems.

      - name: Upload wheels to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
